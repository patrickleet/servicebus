version: '3.3'

networks:
  servicebus:

services:

  # tests:
  #   image: node
  #   volumes:
  #     - .:/usr/src/
  #   working_dir: /usr/src/
  #   user: root
  #   environment:
  #     DEBUG: servicebus-kafka
  #     RABBITMQ_URL: amqp://rabbitmq:5672
  #     KAFKA_HOSTS: kafka:9092
  #   networks:
  #     - servicebus
  #   command: npm run test:staging

  rabbitmq:
    image: rabbitmq:3.6-management
    networks:
      - servicebus
    ports:
      - 5672:5672

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  #   networks: 
  #     - servicebus
  # kafka1:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - target: 9094
  #       published: 9094
  #       protocol: tcp
  #       mode: host
  #   networks:
  #     - servicebus
  #   environment:
  #     HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://${HOST_IP}:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

  zk:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - servicebus
    environment:
      JMX_OPTS: "-Djava.security.auth.login.config=/etc/kafka/server-jaas.conf"
    volumes:
      - ./testHelpers/kafka/server-jaas.conf:/etc/kafka/server-jaas.conf
  kafka1:
    image: wurstmeister/kafka:2.11-0.11.0.2
    ports:
      # - target: 9092
      #   published: 9092
      #   protocol: tcp
      #   mode: host
      # - target: 9093
      #   published: 9093
      #   protocol: tcp
      #   mode: host
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    networks:
      - servicebus
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://${HOST_IP}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      # KAFKA_LISTENERS: "PLAINTEXT://:9092,SSL://:9093,SASL_SSL://:9094"
      # KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${HOST_IP}:9092,SSL://${HOST_IP}:9093,SASL_SSL://${HOST_IP}:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL
      KAFKA_SSL_KEYSTORE_LOCATION: "/var/private/ssl/certs/kafka.server.keystore.jks"
      KAFKA_SSL_KEYSTORE_PASSWORD: "testtest"
      KAFKA_SSL_KEY_PASSWORD: "testtest"
      KAFKA_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/certs/kafka.server.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_PASSWORD: "testtest"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN,SCRAM-SHA-256,SCRAM-SHA-512"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./testHelpers/certs:/var/private/ssl/certs
      - ./testHelpers/kafka/server-jaas.conf:/opt/kafka/config/server-jaas.conf
      # - ./testHelpers/kafka/log4j.properties:/opt/kafka/config/log4j.properties
  # kafka2:
  #   image: wurstmeister/kafka:2.11-0.11.0.2
  #   ports:
  #     - target: 9095
  #       published: 9095
  #       protocol: tcp
  #       mode: host
  #     - target: 9096
  #       published: 9096
  #       protocol: tcp
  #       mode: host
  #     - target: 9097
  #       published: 9097
  #       protocol: tcp
  #       mode: host
  #   networks:
  #     - servicebus
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
  #     KAFKA_ZOOKEEPER_CONNECT: zk:2181
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_DELETE_TOPIC_ENABLE: 'true'
  #     KAFKA_LISTENERS: "PLAINTEXT://:9095,SSL://:9096,SASL_SSL://:9097"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${HOST_IP}:9095,SSL://${HOST_IP}:9096,SASL_SSL://${HOST_IP}:9097"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL
  #     KAFKA_SSL_KEYSTORE_LOCATION: "/var/private/ssl/certs/kafka.server.keystore.jks"
  #     KAFKA_SSL_KEYSTORE_PASSWORD: "testtest"
  #     KAFKA_SSL_KEY_PASSWORD: "testtest"
  #     KAFKA_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/certs/kafka.server.truststore.jks"
  #     KAFKA_SSL_TRUSTSTORE_PASSWORD: "testtest"
  #     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
  #     KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN,SCRAM-SHA-256,SCRAM-SHA-512"
  #     KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./testHelpers/certs:/var/private/ssl/certs
  #     - ./testHelpers/kafka/server-jaas.conf:/opt/kafka/config/server-jaas.conf
  #     # - ./testHelpers/kafka/log4j.properties:/opt/kafka/config/log4j.properties
  # kafka3:
  #   image: wurstmeister/kafka:2.11-0.11.0.2
  #   ports:
  #     - target: 9098
  #       published: 9098
  #       protocol: tcp
  #       mode: host
  #     - target: 9099
  #       published: 9099
  #       protocol: tcp
  #       mode: host
  #     - target: 9100
  #       published: 9100
  #       protocol: tcp
  #       mode: host
  #   networks:
  #     - servicebus
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
  #     KAFKA_ZOOKEEPER_CONNECT: zk:2181
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_DELETE_TOPIC_ENABLE: 'true'
  #     KAFKA_LISTENERS: "PLAINTEXT://:9098,SSL://:9099,SASL_SSL://:9100"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${HOST_IP}:9098,SSL://${HOST_IP}:9099,SASL_SSL://${HOST_IP}:9100"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL
  #     KAFKA_SSL_KEYSTORE_LOCATION: "/var/private/ssl/certs/kafka.server.keystore.jks"
  #     KAFKA_SSL_KEYSTORE_PASSWORD: "testtest"
  #     KAFKA_SSL_KEY_PASSWORD: "testtest"
  #     KAFKA_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/certs/kafka.server.truststore.jks"
  #     KAFKA_SSL_TRUSTSTORE_PASSWORD: "testtest"
  #     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
  #     KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN,SCRAM-SHA-256,SCRAM-SHA-512"
  #     KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./testHelpers/certs:/var/private/ssl/certs
  #     - ./testHelpers/kafka/server-jaas.conf:/opt/kafka/config/server-jaas.conf
  #     # - ./testHelpers/kafka/log4j.properties:/opt/kafka/config/log4j.properties

  # # schema-registry:
  #   image: confluent/schema-registry
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - servicebus

  # kafka-rest:
  #   image: cgswong/confluent-rest-proxy
  #   ports:
  #     - 8082:8082
  #   networks:
  #     - servicebus


  # kafka-topics-ui:
  #   image: landoop/kafka-topics-ui
  #   ports:
  #     - 8000:8000
  #   networks:
  #     - servicebus
  #   environment:
  #     - KAFKA_REST_PROXY_URL=http://kafka-rest:8082
